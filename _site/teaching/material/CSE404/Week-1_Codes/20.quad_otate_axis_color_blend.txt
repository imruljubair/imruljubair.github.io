#include <glut.h>

float _angle = 0.0;

void Draw() {
	glClear(GL_COLOR_BUFFER_BIT);
	
	glPointSize(8);

	glPushMatrix();
	glRotatef(_angle, 0.0, 1.0, 0.0);
		glBegin(GL_QUADS);
			glColor3f(1.0, 0.5, 0.0);// adding color for a portion
			glVertex3f(0.2, 0.2, 0.0);

			glColor3f(0.5, 0.3, 0.0);// adding color for a portion
			glVertex3f(0.8, 0.2, 0.0);

			glColor3f(0.0, 1.0, 0.5);// adding color for a portion
			glVertex3f(0.6, 0.4, 0.0);

			glColor3f(0.5, 0.5, 1.0);// adding color for a portion
			glVertex3f(0.4, 0.4, 0.0);
		glEnd();
	glPopMatrix();

	glFlush();
}

void update(int value)
{
	_angle += 0.2;
	if (_angle > 360)
	{
	_angle - 0.0;
	}

	glutPostRedisplay();
	glutTimerFunc(1,update,0);
}

void Initialize() {
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0);
}

int main(int iArgc, char** cppArgv) {
	glutInit(&iArgc, cppArgv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(250, 250);
	glutInitWindowPosition(200, 200);
	glutCreateWindow("CSE");
	Initialize();
	glutDisplayFunc(Draw);
	glutTimerFunc(25,update,0);
	glutMainLoop();
	return 0;
}